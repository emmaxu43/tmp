Grading at 03/25/2024:20:41:08.939910
For commit ID 4a5643455ee56fc0dfc75aa7ab4080f6369dabde
Grading at Mon Mar 25 04:41:04 PM EDT 2024
Doing some basic checking for your submission

Step 1
Checking that story-step1 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -g -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -g -c story-step1.c
gcc -o story-step1 story-step1.o rand_story.o provided.o
rm story-step1.o
The code compiled (good)
Executable story-step1 exists (good)
Checking with provided test case story.txt
Your file matched the expected output
Now running YOUR tests for step 1

1.1: Current test is story-step1 story.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

Step 2
Checking that story-step2 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -g -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -g -c story-step2.c
gcc -o story-step2 story-step2.o rand_story.o provided.o
rm story-step2.o
The code compiled (good)
Executable story-step2 exists (good)
Now running YOUR tests for step 2

2.1: Current test is story-step2 words.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

Step 3
Checking that story-step3 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -g -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -g -c story-step3.c
gcc -o story-step3 story-step3.o rand_story.o provided.o
rm story-step3.o
The code compiled (good)
Executable story-step3 exists (good)
Now running YOUR tests for step 3

3.1: Current test is story-step3 words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

Step 4
Checking that story-step4 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -g -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -g -c story-step4.c
gcc -o story-step4 story-step4.o rand_story.o provided.o
rm story-step4.o
The code compiled (good)
Executable story-step4 exists (good)
Now running YOUR tests for step 4

4.1: Current test is story-step4 words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

4.2: Current test is story-step4 -n words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==180494== Memcheck, a memory error detector
==180494== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==180494== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==180494== Command: ./story-step4 -n words.txt story2.txt
==180494== Parent PID: 180493
==180494== 
==180494== 
==180494== HEAP SUMMARY:
==180494==     in use at exit: 28 bytes in 4 blocks
==180494==   total heap usage: 55 allocs, 51 frees, 14,878 bytes allocated
==180494== 
==180494== 28 bytes in 4 blocks are definitely lost in loss record 1 of 1
==180494==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==180494==    by 0x109693: find_word (rand_story.c:29)
==180494==    by 0x1097B8: read_words (rand_story.c:59)
==180494==    by 0x10958E: main (story-step4.c:34)
==180494== 
==180494== LEAK SUMMARY:
==180494==    definitely lost: 28 bytes in 4 blocks
==180494==    indirectly lost: 0 bytes in 0 blocks
==180494==      possibly lost: 0 bytes in 0 blocks
==180494==    still reachable: 0 bytes in 0 blocks
==180494==         suppressed: 0 bytes in 0 blocks
==180494== 
==180494== For lists of detected and suppressed errors, rerun with: -s
==180494== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

4.3: Current test is story-step4 -n words.txt story5.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

You have NOT passed your test cases!
You should go and figure out/understand where thing went wrong
And fix the problem(s) before the deadline

Overall Grade: NO GRADE YET
